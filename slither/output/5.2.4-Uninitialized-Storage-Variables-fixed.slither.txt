
=== STDERR ===
'forge config --json' running
'/home/canfly/.solc-select/artifacts/solc-0.8.0/solc-0.8.0 --version' running
'/home/canfly/.solc-select/artifacts/solc-0.8.0/solc-0.8.0 forge-std/=lib/forge-std/src/ /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.2.4-Uninitialized-Storage-Variables-fixed.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --optimize-runs 200 --evm-version istanbul --allow-paths .,/mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src' running
Compilation warnings/errors on /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.2.4-Uninitialized-Storage-Variables-fixed.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.2.4-Uninitialized-Storage-Variables-fixed.sol

Warning: Function state mutability can be restricted to view
  --> /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.2.4-Uninitialized-Storage-Variables-fixed.sol:16:5:
   |
16 |     function TransferMoney(bytes32 _name) public {
   |     ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
Contract locking ether found:
	Contract PaySupplierFixed (src/5.2.4-Uninitialized-Storage-Variables-fixed.sol#7-25) has payable functions:
	 - PaySupplierFixed.receive() (src/5.2.4-Uninitialized-Storage-Variables-fixed.sol#24)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether
INFO:Detectors:
PaySupplierFixed.TransferMoney(bytes32).newTransfer (src/5.2.4-Uninitialized-Storage-Variables-fixed.sol#17) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
Version constraint >=0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- >=0.8.0 (src/5.2.4-Uninitialized-Storage-Variables-fixed.sol#1)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Function PaySupplierFixed.TransferMoney(bytes32) (src/5.2.4-Uninitialized-Storage-Variables-fixed.sol#16-21) is not in mixedCase
Parameter PaySupplierFixed.TransferMoney(bytes32)._name (src/5.2.4-Uninitialized-Storage-Variables-fixed.sol#16) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
PaySupplierFixed.unlocked (src/5.2.4-Uninitialized-Storage-Variables-fixed.sol#8) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
AttackPaySupplierFixed.target (src/5.2.4-Uninitialized-Storage-Variables-fixed.sol#29) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.2.4-Uninitialized-Storage-Variables-fixed.sol analyzed (2 contracts with 100 detectors), 7 result(s) found
