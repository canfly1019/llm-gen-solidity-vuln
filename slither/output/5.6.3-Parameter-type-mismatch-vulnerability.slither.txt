
=== STDERR ===
'forge config --json' running
'/home/canfly/.solc-select/artifacts/solc-0.8.0/solc-0.8.0 --version' running
'/home/canfly/.solc-select/artifacts/solc-0.8.0/solc-0.8.0 forge-std/=lib/forge-std/src/ /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.6.3-Parameter-type-mismatch-vulnerability.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --optimize-runs 200 --evm-version istanbul --allow-paths .,/mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src' running
Compilation warnings/errors on /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.6.3-Parameter-type-mismatch-vulnerability.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.6.3-Parameter-type-mismatch-vulnerability.sol

Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.
  --> /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.6.3-Parameter-type-mismatch-vulnerability.sol:51:1:
   |
51 | contract MaliciousToken {
   | ^ (Relevant source part starts here and spans across multiple lines).
Note: The payable fallback function is defined here.
  --> /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.6.3-Parameter-type-mismatch-vulnerability.sol:55:5:
   |
55 |     fallback() external payable { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.6.3-Parameter-type-mismatch-vulnerability.sol:15:23:
   |
15 |     function transfer(uint32 value) external returns (bool) {
   |                       ^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.6.3-Parameter-type-mismatch-vulnerability.sol:58:23:
   |
58 |     function transfer(uint32 _value) external pure returns (bool) {
   |                       ^^^^^^^^^^^^^

Warning: Function state mutability can be restricted to pure
  --> /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.6.3-Parameter-type-mismatch-vulnerability.sol:15:5:
   |
15 |     function transfer(uint32 value) external returns (bool) {
   |     ^ (Relevant source part starts here and spans across multiple lines).


INFO:Detectors:
Contract locking ether found:
	Contract MaliciousToken (src/5.6.3-Parameter-type-mismatch-vulnerability.sol#51-61) has payable functions:
	 - MaliciousToken.fallback() (src/5.6.3-Parameter-type-mismatch-vulnerability.sol#55)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether
INFO:Detectors:
Version constraint >=0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- >=0.8.0 (src/5.6.3-Parameter-type-mismatch-vulnerability.sol#1)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Parameter Wallet.uint2str(uint256)._i (src/5.6.3-Parameter-type-mismatch-vulnerability.sol#29) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Attack.maliciousToken (src/5.6.3-Parameter-type-mismatch-vulnerability.sol#71) should be immutable 
Attack.wallet (src/5.6.3-Parameter-type-mismatch-vulnerability.sol#70) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/5.6.3-Parameter-type-mismatch-vulnerability.sol analyzed (5 contracts with 100 detectors), 5 result(s) found
