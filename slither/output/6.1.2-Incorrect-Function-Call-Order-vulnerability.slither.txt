
=== STDERR ===
'forge config --json' running
'/home/canfly/.solc-select/artifacts/solc-0.8.0/solc-0.8.0 --version' running
'/home/canfly/.solc-select/artifacts/solc-0.8.0/solc-0.8.0 forge-std/=lib/forge-std/src/ /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --optimize-runs 200 --evm-version istanbul --allow-paths .,/mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src' running
INFO:Detectors:
AttackExploit.withdraw() (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#63-65) sends eth to arbitrary user
	Dangerous calls:
	- address(msg.sender).transfer(address(this).balance) (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#64)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
EthTxOrderDependenceMinimal.setReward() (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#18-24) should emit an event for: 
	- reward = msg.value (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#23) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Version constraint >=0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- >=0.8.0 (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#1)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Reentrancy in EthTxOrderDependenceMinimal.claimReward(uint256) (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#28-34):
	External calls:
	- address(msg.sender).transfer(reward) (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#32)
	State variables written after the call(s):
	- claimed = true (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#33)
Reentrancy in EthTxOrderDependenceMinimal.setReward() (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#18-24):
	External calls:
	- address(owner).transfer(reward) (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#22)
	State variables written after the call(s):
	- reward = msg.value (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#23)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
INFO:Detectors:
AttackExploit.vulnerableContract (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#49) should be immutable 
EthTxOrderDependenceMinimal.owner (src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol#9) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/6.1.2-Incorrect-Function-Call-Order-vulnerability.sol analyzed (2 contracts with 100 detectors), 7 result(s) found
