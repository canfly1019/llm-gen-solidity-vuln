
=== STDERR ===
'forge config --json' running
'/home/canfly/.solc-select/artifacts/solc-0.8.0/solc-0.8.0 --version' running
'/home/canfly/.solc-select/artifacts/solc-0.8.0/solc-0.8.0 forge-std/=lib/forge-std/src/ /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/6.1.3-Improper-Locking-vulnerability.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --optimize-runs 200 --evm-version istanbul --allow-paths .,/mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src' running
INFO:Detectors:
ForceSend.kill(address) (src/6.1.3-Improper-Locking-vulnerability.sol#74-76) allows anyone to destruct the contract
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#suicidal
INFO:Detectors:
LockContract.lock(uint256,bytes,bool) (src/6.1.3-Improper-Locking-vulnerability.sol#40-57) uses a dangerous strict equality:
	- assert(bool)(address(lockAddr).balance == msg.value) (src/6.1.3-Improper-Locking-vulnerability.sol#54)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Contract locking ether found:
	Contract Lock (src/6.1.3-Improper-Locking-vulnerability.sol#7-19) has payable functions:
	 - Lock.constructor(address,uint256) (src/6.1.3-Improper-Locking-vulnerability.sol#12-15)
	 - Lock.receive() (src/6.1.3-Improper-Locking-vulnerability.sol#18)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether
INFO:Detectors:
Lock.constructor(address,uint256)._owner (src/6.1.3-Improper-Locking-vulnerability.sol#12) lacks a zero-check on :
		- owner = _owner (src/6.1.3-Improper-Locking-vulnerability.sol#13)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
LockContract.lock(uint256,bytes,bool) (src/6.1.3-Improper-Locking-vulnerability.sol#40-57) uses timestamp for comparisons
	Dangerous comparisons:
	- assert(bool)(address(lockAddr).balance == msg.value) (src/6.1.3-Improper-Locking-vulnerability.sol#54)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Version constraint >=0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- >=0.8.0 (src/6.1.3-Improper-Locking-vulnerability.sol#1)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Lock.owner (src/6.1.3-Improper-Locking-vulnerability.sol#8) should be immutable 
Lock.unlockTime (src/6.1.3-Improper-Locking-vulnerability.sol#9) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/6.1.3-Improper-Locking-vulnerability.sol analyzed (4 contracts with 100 detectors), 8 result(s) found
