
=== STDERR ===
'forge config --json' running
'/home/canfly/.solc-select/artifacts/solc-0.8.0/solc-0.8.0 --version' running
'/home/canfly/.solc-select/artifacts/solc-0.8.0/solc-0.8.0 forge-std/=lib/forge-std/src/ /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/6.1.7-Exposed-state-variables-vulnerability.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --optimize-runs 200 --evm-version istanbul --allow-paths .,/mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src' running
Compilation warnings/errors on /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/6.1.7-Exposed-state-variables-vulnerability.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/6.1.7-Exposed-state-variables-vulnerability.sol


INFO:Detectors:
Stateful.exploit(address) (src/6.1.7-Exposed-state-variables-vulnerability.sol#18-22) sends eth to arbitrary user
	Dangerous calls:
	- attacker.transfer(address(this).balance) (src/6.1.7-Exposed-state-variables-vulnerability.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Contract locking ether found:
	Contract Attack (src/6.1.7-Exposed-state-variables-vulnerability.sol#32-50) has payable functions:
	 - Attack.constructor(Stateful) (src/6.1.7-Exposed-state-variables-vulnerability.sol#36-38)
	 - Attack.receive() (src/6.1.7-Exposed-state-variables-vulnerability.sol#49)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether
INFO:Detectors:
Stateful.exploit(address).attacker (src/6.1.7-Exposed-state-variables-vulnerability.sol#18) lacks a zero-check on :
		- attacker.transfer(address(this).balance) (src/6.1.7-Exposed-state-variables-vulnerability.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Version constraint >=0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- >=0.8.0 (src/6.1.7-Exposed-state-variables-vulnerability.sol#3)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Attack.vulnerableContract (src/6.1.7-Exposed-state-variables-vulnerability.sol#33) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/6.1.7-Exposed-state-variables-vulnerability.sol analyzed (2 contracts with 100 detectors), 5 result(s) found
