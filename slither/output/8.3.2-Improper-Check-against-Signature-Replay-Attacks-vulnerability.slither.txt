
=== STDERR ===
'forge config --json' running
'/home/canfly/.solc-select/artifacts/solc-0.8.0/solc-0.8.0 --version' running
'/home/canfly/.solc-select/artifacts/solc-0.8.0/solc-0.8.0 forge-std/=lib/forge-std/src/ /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --optimize-runs 200 --evm-version istanbul --allow-paths .,/mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src' running
Compilation warnings/errors on /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol


INFO:Detectors:
Vulnerable.processMessage(string,bytes) (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#17-30) calls abi.encodePacked() with multiple dynamic arguments:
	- messageHash = keccak256(bytes)(abi.encodePacked(address(this),_message,signature)) (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#abi-encodePacked-collision
INFO:Detectors:
Vulnerable.constructor(address)._signer (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#12) lacks a zero-check on :
		- signer = _signer (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#13)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Vulnerable.recoverSigner(bytes32,bytes) (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#38-52) uses assembly
	- INLINE ASM (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#45-49)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Version constraint >=0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- >=0.8.0 (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#1)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Parameter Vulnerable.processMessage(string,bytes)._message (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#17) is not in mixedCase
Parameter Vulnerable.toEthSignedMessageHash(bytes32)._hash (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#33) is not in mixedCase
Parameter Vulnerable.recoverSigner(bytes32,bytes)._ethSignedMessageHash (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#38) is not in mixedCase
Parameter Vulnerable.recoverSigner(bytes32,bytes)._signature (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#38) is not in mixedCase
Parameter Attack.attack(string,bytes,bytes)._message (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#67) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Attack.vulnerable (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#59) should be immutable 
Vulnerable.signer (src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol#10) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:/mnt/c/Users/2017x/CKLab/llm-gen-solidity-vuln/src/8.3.2-Improper-Check-against-Signature-Replay-Attacks-vulnerability.sol analyzed (2 contracts with 100 detectors), 11 result(s) found
