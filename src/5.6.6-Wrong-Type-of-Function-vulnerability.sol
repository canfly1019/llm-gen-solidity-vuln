pragma solidity >=0.8.0;

// 此合約示範錯誤使用函數類型 (Wrong Type of Function) 的漏洞範例
// 漏洞重點：函數 getResult 僅進行局部運算，不讀取/修改狀態變數，
//          卻被錯誤地標示為 view，實際上應該使用 pure。雖然此漏洞
//          目前不會造成直接資金損失，但可能導致邏輯混淆或將來維護錯誤。

contract Test {
    // 漏洞點：此處應使用 pure，因為本函數僅做純計算，不接觸合約狀態
    function getResult() public view returns (uint product, uint sum) {
        uint num1 = 2;
        uint num2 = 4;
        product = num1 * num2;
        sum = num1 + num2;
    }
}

// 攻擊合約：用以呼叫 Test 合約的 getResult 函數，模擬攻擊場景
// 此示範僅展示如何呼叫存在漏洞的函數，不涉及連鎖攻擊或資金轉移

contract Attack {
    // attackGetResult 函數透過傳入 Test 合約地址，呼叫其有問題的 getResult
    // 攻擊者可以使用此方法取得產品計算結果，由於函數屬性說明錯誤，可能引起邏輯誤判
    function attackGetResult(address testAddress) public view returns (uint, uint) {
        return Test(testAddress).getResult();
    }
}

/* 部署與攻擊流程說明：
   1. 部署 Test 合約。
   2. 部署 Attack 合約，並將 Test 合約的地址傳入 attackGetResult 進行呼叫，
      取得運算結果 (product 與 sum)。
   3. 本漏洞並不導致狀態改變，但錯誤的函數型態可能在接口文檔中產生誤導，
      若後續合約開發者改動中誤用狀態變數，則可能衍生更多問題。
*/