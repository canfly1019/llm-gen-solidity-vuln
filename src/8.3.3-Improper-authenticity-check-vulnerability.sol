// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/*
    漏洞名稱: Improper authenticity check
    描述:
    在此案例中，合約接受離線簽名訊息，但未採用 ecrecover() 進行正確簽名驗證。攻擊者只需提供任意非空的 signature，即可通過驗證，因此可以進行未授權操作。

    攻擊手法描述:
    1. 攻擊者察覺到 execute() 函數僅檢查 signature 不為空，並未真正驗證簽名。
    2. 攻擊者可隨意構造一個非空的 bytes 字串作為 signature，並呼叫 execute()，從而提取合約中的 Ether。
    3. 部署合約後，將足夠 Ether 存入合約，再由攻擊者呼叫 execute() 進行提現攻擊。
*/

contract VulnerableAuth {
    event Executed(address caller, uint256 amount);

    // execute() 函數存在漏洞，不使用 ecrecover() 進行簽名驗證
    function execute(uint256 amount, bytes memory signature) public {
        // 【漏洞重點】
        // 僅透過檢查 signature 長度來驗證，並未對離線產生的簽名進行任何真實性檢查
        require(signature.length > 0, "Signature required");

        // 如果合約有足夠的 Ether，攻擊者只需要傳入任意非空的 signature 即可調用此函數，
        // 從而提取出合約中的資金
        payable(msg.sender).transfer(amount);
        emit Executed(msg.sender, amount);
    }

    // 用於接收 Ether 的 fallback 函數
    receive() external payable {}
}

/*
    測試與部署前置說明:
    1. 部署 VulnerableAuth 合約並存入足夠的 Ether。
    2. 攻擊者呼叫 execute() 函數時，可傳入任意非空 bytes 變數 (例如：0x01) 作為 signature，
       即可成功提取 Ether。
*/
