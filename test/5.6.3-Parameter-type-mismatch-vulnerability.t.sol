pragma solidity ^0.8.0;

import "forge-std/Test.sol";
import "../src/5.6.3-Parameter-type-mismatch-vulnerability.sol";

contract ParameterTypeMismatchTest is Test {
    Wallet wallet;
    MaliciousToken maliciousTokenDirect;
    Attack attack;

    function setUp() public {
        wallet = new Wallet();
        maliciousTokenDirect = new MaliciousToken();
        attack = new Attack(wallet);
    }

    // Test that calling Wallet.transfer with a malicious token causes a revert because of the parameter type mismatch
    function testWalletTransferRevertsWithMaliciousToken() public {
        // We expect a revert due to the fallback being called (and no proper bool returned)
        vm.expectRevert();
        wallet.transfer(address(maliciousTokenDirect), 100);
    }

    // Test the exploit scenario via the Attack contract which uses Attack.executeAttack
    function testAttackReverts() public {
        // Expecting revert because Wallet.transfer will call the malicious token and mismatched call will revert
        vm.expectRevert();
        attack.executeAttack(123);
    }
}
